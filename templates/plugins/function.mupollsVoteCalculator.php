<?php
/**
 * MUPolls.
 *
 * @copyright Michael Ueberschaer (MU)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @package MUPolls
 * @author Michael Ueberschaer <kontakt@webdesign-in-bremen.com>.
 * @link http://webdesign-in-bremen.com
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.7.0 (http://modulestudio.de).
 */

/**
 * The mupollsVoteCalculator plugin provides items for a dropdown selector.
 *
 * Available parameters:
 *   - assign: If set, the results are assigned to the corresponding variable instead of printed out.
 *
 * @param  array            $params All attributes passed to this function from the template.
 * @param  Zikula_Form_View $view   Reference to the view object.
 *
 * @return string The output of the plugin.
 */
function smarty_function_mupollsVoteCalculator($params, $view)
{
    $dom = ZLanguage::getModuleDomain('MUPolls');
    
    $pollId = $params['pollId'];
    
    $where = 'tbl.idOfPoll = \'' . DataUtil::formatForStore($pollId) . '\'';
    $selectionArgs = array('ot' => 'vote', 'where' => $where);
    
    $votes = ModUtil::apiFunc('MUPolls', 'selection', 'getEntities', $selectionArgs);
    $countVotes = count($votes);
    
    $out = __('Es wurde folgende Anzahl an Stimmen abgegeben', $dom) . ': ' . $countVotes . '<br />';
    
    $where2 = 'tbl.idOfPoll = \'' . DataUtil::formatForStore($pollId) . '\'';
    $selectionArgs2 = array('ot' => 'option', 'where' => $where2);
    
    $options = ModUtil::apiFunc('MUPolls', 'selection', 'getEntities', $selectionArgs2);
    
    $optionInfos = array();
    
    foreach ($options as $option) {
    	$where3 = 'tbl.idOfOption = \'' . DataUtil::formatForStore($option['id']) . '\'';
    	$selectionArgs3 = array('ot' => 'vote', 'where' => $where3);
    	
    	$optionVotes = ModUtil::apiFunc('MUPolls', 'selection', 'getEntities', $selectionArgs3);
    	$countOptionVotes = count($optionVotes);
    	
    	$optionInfos[] = array('optionTitle' => $option['title'], 'optionPercent' => round($countOptionVotes / $countVotes * 100, 2));
    }
    
    foreach ($optionInfos as $key => $info) {
    	$out .= $info['optionTitle'] . ': ' . $info['optionPercent'] . '%<br />';
    }

    if (array_key_exists('assign', $params)) {
        $view->assign($params['assign'], $out);

        return;
    }

    return $out;
}
