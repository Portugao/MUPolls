{# purpose of this template: votes admin display view #}
{% set baseTemplate = app.request.query.getBoolean('raw', false) ? 'raw' : 'adminBase' %}
{% extends 'MUPollsModule::' ~ baseTemplate ~ '.html.twig' %}
{% block pageTitle %}{{ vote|mupollsmodule_formattedTitle|default(__('Vote')) }}{% endblock %}
{% block title %}
    {% set templateTitle = vote|mupollsmodule_formattedTitle|default(__('Vote')) %}
    {{ templateTitle|notifyFilters('mupollsmodule.filter_hooks.votes.filter')|safeHtml }}
    {% set itemActions = knp_menu_get('MUPollsModule:ItemActionsMenu:menu', [], {entity: vote, area: routeArea, context: 'display'}) %}
    <div class="dropdown">
        <a id="itemActions{{ vote.getKey() }}DropDownToggle" role="button" data-toggle="dropdown" data-target="#" href="javascript:void(0);" class="hidden dropdown-toggle"><i class="fa fa-tasks"></i> {{ __('Actions') }} <span class="caret"></span></a>
        {{ knp_menu_render(itemActions, {template: 'ZikulaMenuModule:Override:actions.html.twig'}) }}
    </div>
{% endblock %}
{% block admin_page_icon 'eye' %}
{% block content %}
    {% set isQuickView = app.request.query.getBoolean('raw', false) %}
    <div class="mupollsmodule-vote mupollsmodule-display">

    <dl>
        {% if vote.idOfOption is not empty %}
            <dt>{{ __('Id of option') }}</dt>
            <dd>{{ vote.idOfOption }}</dd>
        {% endif %}
        {% if vote.idOfPoll is not empty %}
            <dt>{{ __('Id of poll') }}</dt>
            <dd>{{ vote.idOfPoll }}</dd>
        {% endif %}
        
    </dl>

    {{ include('@MUPollsModule/Helper/includeStandardFieldsDisplay.html.twig', {obj: vote}) }}

    {{ block('display_hooks') }}
</div>
{% endblock %}
{% block display_hooks %}
    {{ notifyDisplayHooks(eventName='mupollsmodule.ui_hooks.votes.display_view', id=vote.getKey(), urlObject=currentUrlObject) }}
{% endblock %}
