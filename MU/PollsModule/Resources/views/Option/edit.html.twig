{# purpose of this template: build the user form to edit an instance of option #}
{% set baseTemplate = app.request.query.getBoolean('raw', false) ? 'raw' : 'base' %}
{% extends 'MUPollsModule::' ~ baseTemplate ~ '.html.twig' %}

{% block header %}
    {{ parent() }}
    {{ pageAddAsset('javascript', zasset('@MUPollsModule:js/MUPollsModule.Validation.js'), 98) }}
    {{ pageAddAsset('javascript', zasset('@MUPollsModule:js/MUPollsModule.EditFunctions.js'), 99) }}
    {{ pageAddAsset('javascript', zasset('@MUPollsModule:js/MUPollsModule.InlineEditing.js'), 99) }}
    {{ pageAddAsset('javascript', zasset('@MUPollsModule:js/MUPollsModule.AutoCompletion.js'), 99) }}
{% endblock %}
{% block title mode == 'create' ? __('Create option') : __('Edit option') %}
{% block content %}
    <div class="mupollsmodule-option mupollsmodule-edit">
        {% form_theme form with [
            '@MUPollsModule/Form/bootstrap_3.html.twig',
            'ZikulaFormExtensionBundle:Form:form_div_layout.html.twig'
        ] %}
        {{ form_start(form, {attr: {id: 'optionEditForm', class: 'mupolls-edit-form'}}) }}
        {{ form_errors(form) }}
        {% if translationsEnabled == true %}
            <div class="zikula-bootstrap-tab-container">
                <ul class="{{ form.vars.id|lower }}-translation-locales nav nav-tabs">
                    {% for language in supportedLanguages %}
                        <li{% if language == app.request.locale %} class="active"{% endif %}>
                            <a href="#" data-toggle="tab" data-target=".{{ form.vars.id|lower }}-translations-fields-{{ language }}">
                                {% if not form.vars.valid %}
                                    <span class="label label-danger"><i class="fa fa-warning"></i><span class="sr-only">{{ __('Errors') }}</span></span>
                                {% endif %}
                                {% set hasRequiredFields = language in localesWithMandatoryFields %}
                                {% if hasRequiredFields %}<span class="required">{% endif %}{{ language|languageName|safeHtml }}{% if hasRequiredFields %}</span>{% endif %}
                            </a>
                        </li>
                    {% endfor %}
                </ul>
                <div class="{{ form.vars.id|lower }}-translation-fields tab-content">
                    {% for language in supportedLanguages %}
                        <div class="{{ form.vars.id|lower }}-translations-fields-{{ language }} tab-pane fade{% if language == app.request.locale %} active in{% endif %}">
                            <fieldset>
                                <legend>{{ language|languageName|safeHtml }}</legend>
                                {% if language == app.request.locale %}
                                    {{ form_row(form.title) }}
                                {% else %}
                                    {{ form_row(attribute(form, 'translations' ~ language)) }}
                                {% endif %}
                            </fieldset>
                        </div>
                    {% endfor %}
                </div>
            </div>
        {% else %}
            {% set language = app.request.locale %}
            <fieldset>
                <legend>{{ language|languageName|safeHtml }}</legend>
                {{ form_row(form.title) }}
            </fieldset>
        {% endif %}
        <fieldset>
            <legend>{{ __('Further properties') }}</legend>
            {{ form_row(form.colorOfOption) }}
            {{ form_row(form.idOfPoll) }}
        </fieldset>
        
        {% if mode != 'create' %}
            {{ include('@MUPollsModule/Helper/includeStandardFieldsEdit.html.twig', {obj: option}) }}
        {% endif %}
        
        {% if formHookTemplates|length > 0 %}
            <fieldset>
                {% for hookTemplate in formHookTemplates %}
                    {{ include(hookTemplate.0, hookTemplate.1, ignore_missing = true) }}
                {% endfor %}
            </fieldset>
        {% endif %}
        
        {% if form.moderationSpecificCreator is defined %}
            <fieldset id="moderationFieldsSection">
                <legend>{{ __('Moderation') }} <i class="fa fa-expand"></i></legend>
                <div id="moderationFieldsContent">
                    {{ form_row(form.moderationSpecificCreator) }}
                    {{ form_row(form.moderationSpecificCreationDate) }}
                </div>
            </fieldset>
        {% endif %}
        
        {# include return control #}
        {% if mode == 'create' %}
            <fieldset>
                <legend>{{ __('Return control') }}</legend>
                {{ form_row(form.repeatCreation) }}
            </fieldset>
        {% endif %}
        
        {# include possible submit actions #}
        <div class="form-group form-buttons">
            <div class="col-sm-offset-3 col-sm-9">
                {% for action in actions %}
                    {{ form_widget(attribute(form, action.id)) }}
                {% endfor %}
                {{ form_widget(form.reset) }}
                {{ form_widget(form.cancel) }}
            </div>
        </div>
        {{ form_end(form) }}
        {% set hookId = mode != 'create' ? option.id : null %}
        {{ notifyDisplayHooks(eventName='mupollsmodule.ui_hooks.options.form_edit', id=hookId) }}
        
    </div>
{% endblock %}
{% block footer %}
    {{ parent() }}
    {% set formInitScript %}
        <script type="text/javascript">
        /* <![CDATA[ */
            
            ( function($) {
                $(document).ready(function() {
                    // initialise auto completion for user fields
                    {% if form.moderationSpecificCreator is defined %}
                        initUserLiveSearch('mupollsmodule_option_moderationSpecificCreator');
                    {% endif %}
                    mUPollsInitEditForm('{{ mode }}', '{% if mode != 'create' %}{{ option.id }}{% endif %}');
                });
            })(jQuery);
        /* ]]> */
        </script>
    {% endset %}
    {{ pageAddAsset('footer', formInitScript) }}
{% endblock %}
