<?php
/**
 * MUPolls.
 *
 * @copyright Michael Ueberschaer (MU)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @package MUPolls
 * @author Michael Ueberschaer <kontakt@webdesign-in-bremen.com>.
 * @link http://webdesign-in-bremen.com
 * @link http://zikula.org
 * @version Generated by ModuleStudio (http://modulestudio.de).
 */

/**
 * Repository class used to implement own convenience methods for performing certain DQL queries.
 *
 * This is the concrete repository class for poll entities.
 */
class MUPolls_Entity_Repository_Poll extends MUPolls_Entity_Repository_Base_AbstractPoll
{
    /**
     * Adds default filters as where clauses.
     *
     * @param QueryBuilder $qb         Query builder to be enhanced
     * @param array        $parameters List of determined filter options
     *
     * @return QueryBuilder Enriched query builder instance
     */
    protected function applyDefaultFilters(QueryBuilder $qb, $parameters = array())
    {
        $currentModule = ModUtil::getName();
        $currentLegacyControllerType = FormUtil::getPassedValue('lct', 'user', 'GETPOST');
        if ($currentLegacyControllerType == 'admin' && $currentModule == 'MUPolls') {
            return $qb;
        }
    
        if (!in_array('workflowState', array_keys($parameters)) || empty($parameters['workflowState'])) {
            // per default we show approved polls only
            $onlineStates = array('approved');
            $qb->andWhere('tbl.workflowState IN (:onlineStates)')
               ->setParameter('onlineStates', $onlineStates);
        }
        
        // only polls with frontend eq true
        $qb->andWhere('tbl.inFrontend = :front')
        ->setParameter('front', 1);
        
        /* we do not need this
        $startDate = FormUtil::getPassedValue('dateOfStart', date('Y-m-d H:i:s'), 'GET');
        $qb->andWhere('(tbl.dateOfStart <= :startDate OR tbl.dateOfStart IS NULL)')
           ->setParameter('startDate', $startDate);
        $endDate = FormUtil::getPassedValue('dateOfEnd', date('Y-m-d H:i:s'), 'GET');
        $qb->andWhere('(tbl.dateOfEnd >= :endDate OR tbl.dateOfEnd IS NULL)')
           ->setParameter('endDate', $endDate);*/
    
        return $qb;
    }
}
